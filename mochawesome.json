{
  "stats": {
    "suites": 3,
    "tests": 14,
    "passes": 13,
    "pending": 1,
    "failures": 0,
    "testsRegistered": 14,
    "passPercent": 92.85714285714286,
    "pendingPercent": 7.142857142857143,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "start": "2024-05-23T19:00:34.351Z",
    "end": "2024-05-23T19:01:02.328Z",
    "duration": 27977
  },
  "results": [
    {
      "uuid": "fe00c6eb-32e6-4c13-9be3-b99460bc8e53",
      "title": "",
      "fullFile": "cypress/e2e/API/pet-api-tests.cy.ts",
      "file": "cypress/e2e/API/pet-api-tests.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f0de289e-925a-4e68-a28d-3333882b1a85",
          "title": "Pet API tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should create a pet and check",
              "fullTitle": "Pet API tests Should create a pet and check",
              "timedOut": null,
              "duration": 861,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//creates a pet\ncy.api({\n    method: \"POST\",\n    url: `${Cypress.env(\"baseApiUrl\")}/pet`,\n    body: {\n        id: pet_id,\n        category: {\n            id: category_id,\n            name: category_name\n        },\n        name: pet_name,\n        photoUrls: [\n            random_text\n        ],\n        tags: [\n            {\n                id: random_no,\n                name: random_text\n            }\n        ],\n        status: status.Available\n    }\n}).then((response) => {\n    expect(response.status).to.eq(200);\n    expect(response.body.id).to.eq(pet_id);\n    //checks the pet\n    cy.api({ method: \"GET\",\n        url: `${Cypress.env(\"baseApiUrl\")}/pet/${pet_id}` }).then((response) => {\n        expect(response.status).to.eq(200);\n        expect(response.body.category.id).to.eq(category_id);\n        expect(response.body.name).to.eq(pet_name);\n        expect(response.body.tags[0].id).to.eq(random_no);\n        expect(response.body.status).to.eq(status.Available);\n    });\n});",
              "err": {},
              "uuid": "f7252dc0-0244-43e5-88cc-3e831cff0780",
              "parentUUID": "f0de289e-925a-4e68-a28d-3333882b1a85",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should update the pet and check",
              "fullTitle": "Pet API tests Should update the pet and check",
              "timedOut": null,
              "duration": 155,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// updates the pet\ncy.api({\n    method: 'PUT',\n    url: `${Cypress.env(\"baseApiUrl\")}/pet`,\n    body: {\n        id: pet_id,\n        category: {\n            id: category_id,\n            name: category_name\n        },\n        name: pet_name,\n        photoUrls: [\n            random_text\n        ],\n        tags: [\n            {\n                id: random_no,\n                name: random_text\n            }\n        ],\n        status: status.Pending\n    }\n}).then((response) => {\n    const new_pet_id = response.body.id;\n    Cypress.env('newPetID', new_pet_id);\n    expect(response.status).to.equal(200);\n    expect(response.body.status).to.eq(status.Pending);\n    expect(response.body.id).to.eq(pet_id);\n    expect(response.body.name).to.eq(pet_name);\n});",
              "err": {},
              "uuid": "61ab400a-0b67-4179-841f-d86af5b40a88",
              "parentUUID": "f0de289e-925a-4e68-a28d-3333882b1a85",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should not update the pet info with invalid petID",
              "fullTitle": "Pet API tests Should not update the pet info with invalid petID",
              "timedOut": null,
              "duration": 145,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.api({\n    method: 'PUT',\n    url: `${Cypress.env(\"baseApiUrl\")}/pet`,\n    failOnStatusCode: false,\n    body: {\n        id: random_text,\n        category: {\n            id: category_id,\n            name: category_name\n        },\n        name: pet_name,\n        photoUrls: [\n            random_text\n        ],\n        tags: [\n            {\n                id: random_no,\n                name: random_text\n            }\n        ],\n        status: status.Pending\n    }\n}).then((response) => {\n    expect(response.status).to.equal(500);\n    expect(response.body.message).to.eq(\"something bad happened\");\n});",
              "err": {},
              "uuid": "6e14fa2a-586d-4481-b24b-0371e7bb3938",
              "parentUUID": "f0de289e-925a-4e68-a28d-3333882b1a85",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should not return pet info with invalid ID",
              "fullTitle": "Pet API tests Should not return pet info with invalid ID",
              "timedOut": null,
              "duration": 139,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.api({ method: \"GET\",\n    url: `${Cypress.env(\"baseApiUrl\")}/pet/${random_no}`,\n    failOnStatusCode: false }).then((response) => {\n    expect(response.status).to.equal(404);\n    expect(response.body.message).to.eq(\"Pet not found\");\n});",
              "err": {},
              "uuid": "be45aa35-bf8f-4dbd-82b3-560ea9027a21",
              "parentUUID": "f0de289e-925a-4e68-a28d-3333882b1a85",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should purchase the pet and check",
              "fullTitle": "Pet API tests Should purchase the pet and check",
              "timedOut": null,
              "duration": 264,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//orders the pet\ncy.api({\n    method: \"POST\",\n    url: `${Cypress.env(\"baseApiUrl\")}/store/order`,\n    body: {\n        id: random_no,\n        petId: Cypress.env('newPetID'),\n        quantity: 1,\n        shipDate: \"2024-05-23T11:27:13.175Z\",\n        status: status.Placed,\n        complete: true\n    }\n}).then((response) => {\n    expect(response.status).to.eq(200);\n    expect(response.body.id).to.eq(random_no);\n    expect(response.body.petId).to.eq(pet_id);\n    const order_id = response.body.id;\n    Cypress.env('orderID', order_id);\n    // checks the pet\n    cy.api({\n        method: \"GET\",\n        url: `${Cypress.env(\"baseApiUrl\")}/store/order/${order_id}`\n    }).then((response) => {\n        expect(response.status).to.eq(200);\n        expect(response.body.status).to.eq(status.Placed);\n        expect(response.body.complete).to.eq(true);\n        expect(response.body.petId).to.eq(pet_id);\n    });\n});",
              "err": {},
              "uuid": "b34530f8-b98c-4451-8d80-391190d7bd8a",
              "parentUUID": "f0de289e-925a-4e68-a28d-3333882b1a85",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should delete the pet",
              "fullTitle": "Pet API tests Should delete the pet",
              "timedOut": null,
              "duration": 136,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.api({\n    method: 'DELETE',\n    url: `${Cypress.env(\"baseApiUrl\")}/pet/${pet_id}`\n}).then((response) => {\n    expect(response.status).to.eq(200);\n    expect(response.body.message).to.eq(String(pet_id));\n});",
              "err": {},
              "uuid": "9ec36c34-3c4d-461f-97e8-be3356c3b112",
              "parentUUID": "f0de289e-925a-4e68-a28d-3333882b1a85",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f7252dc0-0244-43e5-88cc-3e831cff0780",
            "61ab400a-0b67-4179-841f-d86af5b40a88",
            "6e14fa2a-586d-4481-b24b-0371e7bb3938",
            "be45aa35-bf8f-4dbd-82b3-560ea9027a21",
            "b34530f8-b98c-4451-8d80-391190d7bd8a",
            "9ec36c34-3c4d-461f-97e8-be3356c3b112"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1700,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "536b941d-1605-4526-9321-26c83085a8f6",
      "title": "",
      "fullFile": "cypress/e2e/API/user-api-tests.cy.ts",
      "file": "cypress/e2e/API/user-api-tests.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e5cb30fb-b475-4097-8300-2f14b4895299",
          "title": "User API tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should create a user and check",
              "fullTitle": "User API tests Should create a user and check",
              "timedOut": null,
              "duration": 326,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const phone_number = _faker_js_faker__WEBPACK_IMPORTED_MODULE_0__.faker.string.numeric(11);\n//creates user\ncy.api({\n    method: 'POST',\n    url: `${Cypress.env(\"baseApiUrl\")}/user`,\n    body: {\n        id: user_id,\n        username: user_name,\n        firstName: first_name,\n        lastName: last_name,\n        email: email,\n        password: password,\n        phone: phone_number,\n        userStatus: 0\n    }\n}).then((response) => {\n    expect(response.status).to.equal(200);\n    expect(response.body.message).to.equal(String(user_id)); // Verify the message contains the user ID\n}).then(() => {\n    //checks user\n    cy.api({\n        method: 'GET',\n        url: `${Cypress.env(\"baseApiUrl\")}/user/${user_name}`\n    }).then((response) => {\n        expect(response.body.username).to.eq(user_name);\n        expect(response.body.id).to.eq(user_id);\n        expect(response.body.email).to.eq(email);\n    });\n});",
              "err": {},
              "uuid": "ce824867-f02a-456f-accb-f1303ca3b0be",
              "parentUUID": "e5cb30fb-b475-4097-8300-2f14b4895299",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should update user and check",
              "fullTitle": "User API tests Should update user and check",
              "timedOut": null,
              "duration": 145,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const phone_number = _faker_js_faker__WEBPACK_IMPORTED_MODULE_0__.faker.string.numeric(11);\n//updates user\ncy.api({\n    method: 'PUT',\n    url: `${Cypress.env(\"baseApiUrl\")}/user/${user_name}`,\n    body: {\n        id: user_id,\n        username: user_name,\n        firstName: first_name,\n        lastName: last_name,\n        email: email,\n        password: password,\n        phone: phone_number,\n        userStatus: 0\n    }\n}).then((response) => {\n    expect(response.status).to.equal(200);\n    expect(response.body.message).to.equal(String(user_id)); // Verify the message contains the user ID\n});",
              "err": {},
              "uuid": "b863a32a-3d21-4ed4-a881-8b0478b0430a",
              "parentUUID": "e5cb30fb-b475-4097-8300-2f14b4895299",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should delete the user",
              "fullTitle": "User API tests Should delete the user",
              "timedOut": null,
              "duration": 140,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.api({\n    method: 'DELETE',\n    url: `${Cypress.env(\"baseApiUrl\")}/user/${user_name}`\n}).then((response) => {\n    expect(response.status).to.eq(200);\n    expect(response.body.message).to.eq(user_name);\n});",
              "err": {},
              "uuid": "899e3b48-a00a-488c-96fe-b565b43befe7",
              "parentUUID": "e5cb30fb-b475-4097-8300-2f14b4895299",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ce824867-f02a-456f-accb-f1303ca3b0be",
            "b863a32a-3d21-4ed4-a881-8b0478b0430a",
            "899e3b48-a00a-488c-96fe-b565b43befe7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 611,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "6fa3409c-2dc5-4a18-9fd2-8d9f3d703c53",
      "title": "",
      "fullFile": "cypress/e2e/ui-tests.cy.ts",
      "file": "cypress/e2e/ui-tests.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3221f1bf-511b-428e-917f-9950d6b1dad9",
          "title": "UI tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should click each item and match with the redirected page title",
              "fullTitle": "UI tests Should click each item and match with the redirected page title",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "cy.get('h3').each(($el, index) => {\n    cy.clickAndCheckPageTitle(index);\n});\ncy.log('All h3 elements have been clicked.');",
              "err": {},
              "uuid": "6514ace7-29e4-4778-8ecf-809a2a66fbb6",
              "parentUUID": "3221f1bf-511b-428e-917f-9950d6b1dad9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should login with valid credentials and logs out",
              "fullTitle": "UI tests Should login with valid credentials and logs out",
              "timedOut": null,
              "duration": 3294,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.goTo('Sample App');\nconst name = _faker_js_faker__WEBPACK_IMPORTED_MODULE_0__.faker.word.noun(5);\ncy.get('[name=\"UserName\"]').type(name);\ncy.get('[name=\"Password\"]').type('pwd');\ncy.get('#login').click(); //login\ncy.get('#loginstatus').should('be.visible').and('contain', `Welcome, ${name}!`);\ncy.get('#login').click(); //logout\ncy.get('#loginstatus').should('be.visible').and('contain', 'User logged out.');",
              "err": {},
              "uuid": "2440b465-451e-4e75-9533-c48af4495126",
              "parentUUID": "3221f1bf-511b-428e-917f-9950d6b1dad9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should not login with invalid password",
              "fullTitle": "UI tests Should not login with invalid password",
              "timedOut": null,
              "duration": 1065,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.goTo('Sample App');\nconst name = _faker_js_faker__WEBPACK_IMPORTED_MODULE_0__.faker.word.noun(5);\ncy.get('[name=\"UserName\"]').type(name);\ncy.get('[name=\"Password\"]').type('234');\ncy.get('#login').click(); //login\ncy.get('#loginstatus').should('be.visible').and('contain', 'Invalid username/password');",
              "err": {},
              "uuid": "dc199312-888d-4b2a-b902-82b0af8220cc",
              "parentUUID": "3221f1bf-511b-428e-917f-9950d6b1dad9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should wait load time ",
              "fullTitle": "UI tests Should wait load time ",
              "timedOut": null,
              "duration": 5708,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept(`${Cypress.env('baseUiUrl')}/loaddelay`).as('loader');\ncy.goTo('Load Delay');\ncy.wait('@loader');\ncy.contains('.btn-primary', 'Button Appearing After Delay').should('be.visible');",
              "err": {},
              "uuid": "fb84a9ef-87d2-47c6-a129-7d95be797058",
              "parentUUID": "3221f1bf-511b-428e-917f-9950d6b1dad9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should scroll to the button",
              "fullTitle": "UI tests Should scroll to the button",
              "timedOut": null,
              "duration": 762,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(`${Cypress.env('baseUiUrl')}/scrollbars`);\ncy.get('#hidingButton').scrollIntoView().should('be.visible');",
              "err": {},
              "uuid": "5c9c09fc-f7fb-4ec0-bc62-a56974d6fea8",
              "parentUUID": "3221f1bf-511b-428e-917f-9950d6b1dad9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2440b465-451e-4e75-9533-c48af4495126",
            "dc199312-888d-4b2a-b902-82b0af8220cc",
            "fb84a9ef-87d2-47c6-a129-7d95be797058",
            "5c9c09fc-f7fb-4ec0-bc62-a56974d6fea8"
          ],
          "failures": [],
          "pending": [
            "6514ace7-29e4-4778-8ecf-809a2a66fbb6"
          ],
          "skipped": [],
          "duration": 10829,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results/mochawesome",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}