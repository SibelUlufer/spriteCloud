{
  "stats": {
    "suites": 3,
    "tests": 14,
    "passes": 13,
    "pending": 1,
    "failures": 0,
    "testsRegistered": 14,
    "passPercent": 92.85714285714286,
    "pendingPercent": 7.142857142857143,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "start": "2024-05-23T18:07:29.872Z",
    "end": "2024-05-23T18:07:55.830Z",
    "duration": 25958
  },
  "results": [
    {
      "uuid": "f51e6770-ec97-44ee-804d-1dc60be79447",
      "title": "",
      "fullFile": "cypress/e2e/API/pet-api-tests.cy.ts",
      "file": "cypress/e2e/API/pet-api-tests.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "71e2877c-ef52-489f-af57-78d551aed795",
          "title": "Pet API tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should create a pet and check",
              "fullTitle": "Pet API tests Should create a pet and check",
              "timedOut": null,
              "duration": 887,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//creates a pet\ncy.api({\n    method: \"POST\",\n    url: `${Cypress.env(\"baseApiUrl\")}/pet`,\n    body: {\n        id: pet_id,\n        category: {\n            id: category_id,\n            name: category_name\n        },\n        name: pet_name,\n        photoUrls: [\n            random_text\n        ],\n        tags: [\n            {\n                id: random_no,\n                name: random_text\n            }\n        ],\n        status: status.Available\n    }\n}).then((response) => {\n    expect(response.status).to.eq(200);\n    expect(response.body.id).to.eq(pet_id);\n    //checks the pet\n    cy.api({ method: \"GET\",\n        url: `${Cypress.env(\"baseApiUrl\")}/pet/${pet_id}` }).then((response) => {\n        expect(response.status).to.eq(200);\n        expect(response.body.category.id).to.eq(category_id);\n        expect(response.body.name).to.eq(pet_name);\n        expect(response.body.tags[0].id).to.eq(random_no);\n        expect(response.body.status).to.eq(status.Available);\n    });\n});",
              "err": {},
              "uuid": "c6f8cf16-64b5-4edf-acd2-cc3d0111eef3",
              "parentUUID": "71e2877c-ef52-489f-af57-78d551aed795",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should update the pet and check",
              "fullTitle": "Pet API tests Should update the pet and check",
              "timedOut": null,
              "duration": 145,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// updates the pet\ncy.api({\n    method: 'PUT',\n    url: `${Cypress.env(\"baseApiUrl\")}/pet`,\n    body: {\n        id: pet_id,\n        category: {\n            id: category_id,\n            name: category_name\n        },\n        name: pet_name,\n        photoUrls: [\n            random_text\n        ],\n        tags: [\n            {\n                id: random_no,\n                name: random_text\n            }\n        ],\n        status: status.Pending\n    }\n}).then((response) => {\n    const new_pet_id = response.body.id;\n    Cypress.env('newPetID', new_pet_id);\n    expect(response.status).to.equal(200);\n    expect(response.body.status).to.eq(status.Pending);\n    expect(response.body.id).to.eq(pet_id);\n    expect(response.body.name).to.eq(pet_name);\n});",
              "err": {},
              "uuid": "63a5a3b1-662c-4918-b28a-5d78e40e36ce",
              "parentUUID": "71e2877c-ef52-489f-af57-78d551aed795",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should not update the pet info with invalid petID",
              "fullTitle": "Pet API tests Should not update the pet info with invalid petID",
              "timedOut": null,
              "duration": 150,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.api({\n    method: 'PUT',\n    url: `${Cypress.env(\"baseApiUrl\")}/pet`,\n    failOnStatusCode: false,\n    body: {\n        id: random_text,\n        category: {\n            id: category_id,\n            name: category_name\n        },\n        name: pet_name,\n        photoUrls: [\n            random_text\n        ],\n        tags: [\n            {\n                id: random_no,\n                name: random_text\n            }\n        ],\n        status: status.Pending\n    }\n}).then((response) => {\n    expect(response.status).to.equal(500);\n    expect(response.body.message).to.eq(\"something bad happened\");\n});",
              "err": {},
              "uuid": "98d96e15-699a-42fb-8146-db4d67e18e70",
              "parentUUID": "71e2877c-ef52-489f-af57-78d551aed795",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should not return pet info with invalid ID",
              "fullTitle": "Pet API tests Should not return pet info with invalid ID",
              "timedOut": null,
              "duration": 141,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.api({ method: \"GET\",\n    url: `${Cypress.env(\"baseApiUrl\")}/pet/${random_no}`,\n    failOnStatusCode: false }).then((response) => {\n    expect(response.status).to.equal(404);\n    expect(response.body.message).to.eq(\"Pet not found\");\n});",
              "err": {},
              "uuid": "3151f077-a0ac-43d7-97ac-d6237010a842",
              "parentUUID": "71e2877c-ef52-489f-af57-78d551aed795",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should purchase the pet and check",
              "fullTitle": "Pet API tests Should purchase the pet and check",
              "timedOut": null,
              "duration": 277,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//orders the pet\ncy.api({\n    method: \"POST\",\n    url: `${Cypress.env(\"baseApiUrl\")}/store/order`,\n    body: {\n        id: random_no,\n        petId: Cypress.env('newPetID'),\n        quantity: 1,\n        shipDate: \"2024-05-23T11:27:13.175Z\",\n        status: status.Placed,\n        complete: true\n    }\n}).then((response) => {\n    expect(response.status).to.eq(200);\n    expect(response.body.id).to.eq(random_no);\n    expect(response.body.petId).to.eq(pet_id);\n    const order_id = response.body.id;\n    Cypress.env('orderID', order_id);\n    // checks the pet\n    cy.api({\n        method: \"GET\",\n        url: `${Cypress.env(\"baseApiUrl\")}/store/order/${order_id}`\n    }).then((response) => {\n        expect(response.status).to.eq(200);\n        expect(response.body.status).to.eq(status.Placed);\n        expect(response.body.complete).to.eq(true);\n        expect(response.body.petId).to.eq(pet_id);\n    });\n});",
              "err": {},
              "uuid": "f6299488-e836-4c90-bae3-db77eb86e439",
              "parentUUID": "71e2877c-ef52-489f-af57-78d551aed795",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should delete the pet",
              "fullTitle": "Pet API tests Should delete the pet",
              "timedOut": null,
              "duration": 146,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.api({\n    method: 'DELETE',\n    url: `${Cypress.env(\"baseApiUrl\")}/pet/${pet_id}`\n}).then((response) => {\n    expect(response.status).to.eq(200);\n    expect(response.body.message).to.eq(String(pet_id));\n});",
              "err": {},
              "uuid": "a3b64add-1dcb-4658-882e-2a16a939ffc0",
              "parentUUID": "71e2877c-ef52-489f-af57-78d551aed795",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c6f8cf16-64b5-4edf-acd2-cc3d0111eef3",
            "63a5a3b1-662c-4918-b28a-5d78e40e36ce",
            "98d96e15-699a-42fb-8146-db4d67e18e70",
            "3151f077-a0ac-43d7-97ac-d6237010a842",
            "f6299488-e836-4c90-bae3-db77eb86e439",
            "a3b64add-1dcb-4658-882e-2a16a939ffc0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1746,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "b61eb309-ebe4-4656-9ad8-6c438c086623",
      "title": "",
      "fullFile": "cypress/e2e/API/user-api-tests.cy.ts",
      "file": "cypress/e2e/API/user-api-tests.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a71d80dd-d8dc-440a-bc01-7865fe13df0c",
          "title": "User API tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should create a user and check",
              "fullTitle": "User API tests Should create a user and check",
              "timedOut": null,
              "duration": 328,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const phone_number = _faker_js_faker__WEBPACK_IMPORTED_MODULE_0__.faker.string.numeric(11);\n//creates user\ncy.api({\n    method: 'POST',\n    url: `${Cypress.env(\"baseApiUrl\")}/user`,\n    body: {\n        id: user_id,\n        username: user_name,\n        firstName: first_name,\n        lastName: last_name,\n        email: email,\n        password: password,\n        phone: phone_number,\n        userStatus: 0\n    }\n}).then((response) => {\n    expect(response.status).to.equal(200);\n    expect(response.body.message).to.equal(String(user_id)); // Verify the message contains the user ID\n}).then(() => {\n    //checks user\n    cy.api({\n        method: 'GET',\n        url: `${Cypress.env(\"baseApiUrl\")}/user/${user_name}`\n    }).then((response) => {\n        expect(response.body.username).to.eq(user_name);\n        expect(response.body.id).to.eq(user_id);\n        expect(response.body.email).to.eq(email);\n    });\n});",
              "err": {},
              "uuid": "160ea2a0-d355-465f-9d6b-56fa746a705f",
              "parentUUID": "a71d80dd-d8dc-440a-bc01-7865fe13df0c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should update user and check",
              "fullTitle": "User API tests Should update user and check",
              "timedOut": null,
              "duration": 153,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const phone_number = _faker_js_faker__WEBPACK_IMPORTED_MODULE_0__.faker.string.numeric(11);\n//updates user\ncy.api({\n    method: 'PUT',\n    url: `${Cypress.env(\"baseApiUrl\")}/user/${user_name}`,\n    body: {\n        id: user_id,\n        username: user_name,\n        firstName: first_name,\n        lastName: last_name,\n        email: email,\n        password: password,\n        phone: phone_number,\n        userStatus: 0\n    }\n}).then((response) => {\n    expect(response.status).to.equal(200);\n    expect(response.body.message).to.equal(String(user_id)); // Verify the message contains the user ID\n});",
              "err": {},
              "uuid": "c9c104aa-b233-4bf3-b659-2e0ed069f5aa",
              "parentUUID": "a71d80dd-d8dc-440a-bc01-7865fe13df0c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should delete the user",
              "fullTitle": "User API tests Should delete the user",
              "timedOut": null,
              "duration": 148,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.api({\n    method: 'DELETE',\n    url: `${Cypress.env(\"baseApiUrl\")}/user/${user_name}`\n}).then((response) => {\n    expect(response.status).to.eq(200);\n    expect(response.body.message).to.eq(user_name);\n});",
              "err": {},
              "uuid": "dc9bef47-7353-42fe-a86e-a014b0ba2050",
              "parentUUID": "a71d80dd-d8dc-440a-bc01-7865fe13df0c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "160ea2a0-d355-465f-9d6b-56fa746a705f",
            "c9c104aa-b233-4bf3-b659-2e0ed069f5aa",
            "dc9bef47-7353-42fe-a86e-a014b0ba2050"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 629,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "9a78d359-f79d-4822-9636-02296a18ddd9",
      "title": "",
      "fullFile": "cypress/e2e/ui-tests.cy.ts",
      "file": "cypress/e2e/ui-tests.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "420208a2-410f-4370-8254-ebd45ffa127c",
          "title": "UI tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should click each item and match with the redirected page title",
              "fullTitle": "UI tests Should click each item and match with the redirected page title",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "cy.get('h3').each(($el, index) => {\n    cy.clickAndCheckPageTitle(index);\n});\ncy.log('All h3 elements have been clicked.');",
              "err": {},
              "uuid": "79dba95d-a558-4b18-8063-84f449fe92ac",
              "parentUUID": "420208a2-410f-4370-8254-ebd45ffa127c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should login with valid credentials and logs out",
              "fullTitle": "UI tests Should login with valid credentials and logs out",
              "timedOut": null,
              "duration": 1741,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.goTo('Sample App');\nconst name = _faker_js_faker__WEBPACK_IMPORTED_MODULE_0__.faker.word.noun(5);\ncy.get('[name=\"UserName\"]').type(name);\ncy.get('[name=\"Password\"]').type('pwd');\ncy.get('#login').click(); //login\ncy.get('#loginstatus').should('be.visible').and('contain', `Welcome, ${name}!`);\ncy.get('#login').click(); //logout\ncy.get('#loginstatus').should('be.visible').and('contain', 'User logged out.');",
              "err": {},
              "uuid": "d32e3161-6539-4d33-8f5e-f4d34bb1abfa",
              "parentUUID": "420208a2-410f-4370-8254-ebd45ffa127c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should not login with invalid password",
              "fullTitle": "UI tests Should not login with invalid password",
              "timedOut": null,
              "duration": 1076,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.goTo('Sample App');\nconst name = _faker_js_faker__WEBPACK_IMPORTED_MODULE_0__.faker.word.noun(5);\ncy.get('[name=\"UserName\"]').type(name);\ncy.get('[name=\"Password\"]').type('234');\ncy.get('#login').click(); //login\ncy.get('#loginstatus').should('be.visible').and('contain', 'Invalid username/password');",
              "err": {},
              "uuid": "1ba99899-3d61-46ef-a4b7-f960e45013b9",
              "parentUUID": "420208a2-410f-4370-8254-ebd45ffa127c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should wait load time ",
              "fullTitle": "UI tests Should wait load time ",
              "timedOut": null,
              "duration": 5711,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept(`${Cypress.env('baseUiUrl')}/loaddelay`).as('loader');\ncy.goTo('Load Delay');\ncy.wait('@loader');\ncy.contains('.btn-primary', 'Button Appearing After Delay').should('be.visible');",
              "err": {},
              "uuid": "857deeea-ee11-4a5a-84d2-0f56f8f7e373",
              "parentUUID": "420208a2-410f-4370-8254-ebd45ffa127c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should scroll to the button",
              "fullTitle": "UI tests Should scroll to the button",
              "timedOut": null,
              "duration": 578,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(`${Cypress.env('baseUiUrl')}/scrollbars`);\ncy.get('#hidingButton').scrollIntoView().should('be.visible');",
              "err": {},
              "uuid": "9e637cf4-3c09-419b-97eb-b3e4456f87ed",
              "parentUUID": "420208a2-410f-4370-8254-ebd45ffa127c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d32e3161-6539-4d33-8f5e-f4d34bb1abfa",
            "1ba99899-3d61-46ef-a4b7-f960e45013b9",
            "857deeea-ee11-4a5a-84d2-0f56f8f7e373",
            "9e637cf4-3c09-419b-97eb-b3e4456f87ed"
          ],
          "failures": [],
          "pending": [
            "79dba95d-a558-4b18-8063-84f449fe92ac"
          ],
          "skipped": [],
          "duration": 9106,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results/mochawesome",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}