{
  "stats": {
    "suites": 1,
    "tests": 6,
    "passes": 6,
    "pending": 0,
    "failures": 0,
    "start": "2024-05-23T18:07:48.194Z",
    "end": "2024-05-23T18:07:50.138Z",
    "duration": 1944,
    "testsRegistered": 6,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "f51e6770-ec97-44ee-804d-1dc60be79447",
      "title": "",
      "fullFile": "cypress/e2e/API/pet-api-tests.cy.ts",
      "file": "cypress/e2e/API/pet-api-tests.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "71e2877c-ef52-489f-af57-78d551aed795",
          "title": "Pet API tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should create a pet and check",
              "fullTitle": "Pet API tests Should create a pet and check",
              "timedOut": null,
              "duration": 887,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//creates a pet\ncy.api({\n    method: \"POST\",\n    url: `${Cypress.env(\"baseApiUrl\")}/pet`,\n    body: {\n        id: pet_id,\n        category: {\n            id: category_id,\n            name: category_name\n        },\n        name: pet_name,\n        photoUrls: [\n            random_text\n        ],\n        tags: [\n            {\n                id: random_no,\n                name: random_text\n            }\n        ],\n        status: status.Available\n    }\n}).then((response) => {\n    expect(response.status).to.eq(200);\n    expect(response.body.id).to.eq(pet_id);\n    //checks the pet\n    cy.api({ method: \"GET\",\n        url: `${Cypress.env(\"baseApiUrl\")}/pet/${pet_id}` }).then((response) => {\n        expect(response.status).to.eq(200);\n        expect(response.body.category.id).to.eq(category_id);\n        expect(response.body.name).to.eq(pet_name);\n        expect(response.body.tags[0].id).to.eq(random_no);\n        expect(response.body.status).to.eq(status.Available);\n    });\n});",
              "err": {},
              "uuid": "c6f8cf16-64b5-4edf-acd2-cc3d0111eef3",
              "parentUUID": "71e2877c-ef52-489f-af57-78d551aed795",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should update the pet and check",
              "fullTitle": "Pet API tests Should update the pet and check",
              "timedOut": null,
              "duration": 145,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// updates the pet\ncy.api({\n    method: 'PUT',\n    url: `${Cypress.env(\"baseApiUrl\")}/pet`,\n    body: {\n        id: pet_id,\n        category: {\n            id: category_id,\n            name: category_name\n        },\n        name: pet_name,\n        photoUrls: [\n            random_text\n        ],\n        tags: [\n            {\n                id: random_no,\n                name: random_text\n            }\n        ],\n        status: status.Pending\n    }\n}).then((response) => {\n    const new_pet_id = response.body.id;\n    Cypress.env('newPetID', new_pet_id);\n    expect(response.status).to.equal(200);\n    expect(response.body.status).to.eq(status.Pending);\n    expect(response.body.id).to.eq(pet_id);\n    expect(response.body.name).to.eq(pet_name);\n});",
              "err": {},
              "uuid": "63a5a3b1-662c-4918-b28a-5d78e40e36ce",
              "parentUUID": "71e2877c-ef52-489f-af57-78d551aed795",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should not update the pet info with invalid petID",
              "fullTitle": "Pet API tests Should not update the pet info with invalid petID",
              "timedOut": null,
              "duration": 150,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.api({\n    method: 'PUT',\n    url: `${Cypress.env(\"baseApiUrl\")}/pet`,\n    failOnStatusCode: false,\n    body: {\n        id: random_text,\n        category: {\n            id: category_id,\n            name: category_name\n        },\n        name: pet_name,\n        photoUrls: [\n            random_text\n        ],\n        tags: [\n            {\n                id: random_no,\n                name: random_text\n            }\n        ],\n        status: status.Pending\n    }\n}).then((response) => {\n    expect(response.status).to.equal(500);\n    expect(response.body.message).to.eq(\"something bad happened\");\n});",
              "err": {},
              "uuid": "98d96e15-699a-42fb-8146-db4d67e18e70",
              "parentUUID": "71e2877c-ef52-489f-af57-78d551aed795",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should not return pet info with invalid ID",
              "fullTitle": "Pet API tests Should not return pet info with invalid ID",
              "timedOut": null,
              "duration": 141,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.api({ method: \"GET\",\n    url: `${Cypress.env(\"baseApiUrl\")}/pet/${random_no}`,\n    failOnStatusCode: false }).then((response) => {\n    expect(response.status).to.equal(404);\n    expect(response.body.message).to.eq(\"Pet not found\");\n});",
              "err": {},
              "uuid": "3151f077-a0ac-43d7-97ac-d6237010a842",
              "parentUUID": "71e2877c-ef52-489f-af57-78d551aed795",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should purchase the pet and check",
              "fullTitle": "Pet API tests Should purchase the pet and check",
              "timedOut": null,
              "duration": 277,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//orders the pet\ncy.api({\n    method: \"POST\",\n    url: `${Cypress.env(\"baseApiUrl\")}/store/order`,\n    body: {\n        id: random_no,\n        petId: Cypress.env('newPetID'),\n        quantity: 1,\n        shipDate: \"2024-05-23T11:27:13.175Z\",\n        status: status.Placed,\n        complete: true\n    }\n}).then((response) => {\n    expect(response.status).to.eq(200);\n    expect(response.body.id).to.eq(random_no);\n    expect(response.body.petId).to.eq(pet_id);\n    const order_id = response.body.id;\n    Cypress.env('orderID', order_id);\n    // checks the pet\n    cy.api({\n        method: \"GET\",\n        url: `${Cypress.env(\"baseApiUrl\")}/store/order/${order_id}`\n    }).then((response) => {\n        expect(response.status).to.eq(200);\n        expect(response.body.status).to.eq(status.Placed);\n        expect(response.body.complete).to.eq(true);\n        expect(response.body.petId).to.eq(pet_id);\n    });\n});",
              "err": {},
              "uuid": "f6299488-e836-4c90-bae3-db77eb86e439",
              "parentUUID": "71e2877c-ef52-489f-af57-78d551aed795",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should delete the pet",
              "fullTitle": "Pet API tests Should delete the pet",
              "timedOut": null,
              "duration": 146,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.api({\n    method: 'DELETE',\n    url: `${Cypress.env(\"baseApiUrl\")}/pet/${pet_id}`\n}).then((response) => {\n    expect(response.status).to.eq(200);\n    expect(response.body.message).to.eq(String(pet_id));\n});",
              "err": {},
              "uuid": "a3b64add-1dcb-4658-882e-2a16a939ffc0",
              "parentUUID": "71e2877c-ef52-489f-af57-78d551aed795",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c6f8cf16-64b5-4edf-acd2-cc3d0111eef3",
            "63a5a3b1-662c-4918-b28a-5d78e40e36ce",
            "98d96e15-699a-42fb-8146-db4d67e18e70",
            "3151f077-a0ac-43d7-97ac-d6237010a842",
            "f6299488-e836-4c90-bae3-db77eb86e439",
            "a3b64add-1dcb-4658-882e-2a16a939ffc0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1746,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results/mochawesome",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}