{
  "stats": {
    "suites": 1,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
    "start": "2024-05-23T15:09:04.513Z",
    "end": "2024-05-23T15:09:05.235Z",
    "duration": 722,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "3f77c0b8-808e-4713-8f29-25b6686e1a52",
      "title": "",
      "fullFile": "cypress/e2e/API/user-api-tests.cy.ts",
      "file": "cypress/e2e/API/user-api-tests.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "736022bb-012b-4b14-bac6-e023eddc7a89",
          "title": "User API tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should create a user and check",
              "fullTitle": "User API tests Should create a user and check",
              "timedOut": null,
              "duration": 331,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "\"videos/user-api-tests.cy.ts.mp4\"",
              "code": "const phone_number = _faker_js_faker__WEBPACK_IMPORTED_MODULE_0__.faker.string.numeric(11);\n//creates user\ncy.api({\n    method: 'POST',\n    url: `${Cypress.env(\"baseApiUrl\")}/user`,\n    body: {\n        id: user_id,\n        username: user_name,\n        firstName: first_name,\n        lastName: last_name,\n        email: email,\n        password: password,\n        phone: phone_number,\n        userStatus: 0\n    }\n}).then((response) => {\n    expect(response.status).to.equal(200);\n    expect(response.body.message).to.equal(String(user_id)); // Verify the message contains the user ID\n}).then(() => {\n    //checks user\n    cy.api({\n        method: 'GET',\n        url: `${Cypress.env(\"baseApiUrl\")}/user/${user_name}`\n    }).then((response) => {\n        expect(response.body.username).to.eq(user_name);\n        expect(response.body.id).to.eq(user_id);\n        expect(response.body.email).to.eq(email);\n    });\n});",
              "err": {},
              "uuid": "af152821-fd4c-479d-a380-6aec15b81a1d",
              "parentUUID": "736022bb-012b-4b14-bac6-e023eddc7a89",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should update user and check",
              "fullTitle": "User API tests Should update user and check",
              "timedOut": null,
              "duration": 142,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "\"videos/user-api-tests.cy.ts.mp4\"",
              "code": "const phone_number = _faker_js_faker__WEBPACK_IMPORTED_MODULE_0__.faker.string.numeric(11);\n//updates user\ncy.api({\n    method: 'PUT',\n    url: `${Cypress.env(\"baseApiUrl\")}/user/${user_name}`,\n    body: {\n        id: user_id,\n        username: user_name,\n        firstName: first_name,\n        lastName: last_name,\n        email: email,\n        password: password,\n        phone: phone_number,\n        userStatus: 0\n    }\n}).then((response) => {\n    expect(response.status).to.equal(200);\n    expect(response.body.message).to.equal(String(user_id)); // Verify the message contains the user ID\n});",
              "err": {},
              "uuid": "5cdec7f7-09e2-4af2-90d6-10362cab4035",
              "parentUUID": "736022bb-012b-4b14-bac6-e023eddc7a89",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should delete the user",
              "fullTitle": "User API tests Should delete the user",
              "timedOut": null,
              "duration": 144,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "\"videos/user-api-tests.cy.ts.mp4\"",
              "code": "cy.api({\n    method: 'DELETE',\n    url: `${Cypress.env(\"baseApiUrl\")}/user/${user_name}`\n}).then((response) => {\n    expect(response.status).to.eq(200);\n    expect(response.body.message).to.eq(user_name);\n});",
              "err": {},
              "uuid": "d6106d2f-0a10-441c-a831-6fa42c7e4871",
              "parentUUID": "736022bb-012b-4b14-bac6-e023eddc7a89",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "af152821-fd4c-479d-a380-6aec15b81a1d",
            "5cdec7f7-09e2-4af2-90d6-10362cab4035",
            "d6106d2f-0a10-441c-a831-6fa42c7e4871"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 617,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results/mochawesome",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}